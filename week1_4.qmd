---
title: "Describing Data Visually"
format: 
  html: 
    fontsize: 25px
editor_options: 
  chunk_output_type: console
---

::: {style="color: yellow"}
## Data Visualization
:::

This section will briefly introduce you to visualizing data using the `ggplot2` package. R has a number of systems for making graphs but ggplot2 is by far the most developed option. ggplot2 implements the **grammar of graphics**, and if you'd like to learn more about the motivation for this work take a look at [The Layered Grammar of Graphics](http://vita.had.co.nz/papers/layered-grammar.pdf).

### Install and Load `ggplot2` Package

Once we know the data has been read into R we can look at how R understands the data file using the structure function `str()`

Let's install `ggplot2`, and then load the package.

```{r, eval=FALSE}
install.packages("ggplot2") # install the package
```

```{r}
library("ggplot2") # load the library
```

### The `mpg` Dataset

`ggplot2` contains a dataset titled `mpg` that contains observations collected by the US Environmental Protection Agency on 38 models of car. Let's look at the dataset using the `describe()` function.

```{r}
library("psych") # load the library
describe(mpg)
```

### Creating a Basic ggplot

Let's take a look at two variables in the `mpg` dataset.

-   `displ`, a car’s engine size, in litres.

-   `hwy`, a car’s fuel efficiency on the highway, in miles per gallon (mpg). A car with a low fuel efficiency consumes more fuel than a car with a high fuel efficiency when they travel the same distance.

To plot `mpg`, run this code to put `displ` on the x-axis and `hwy` on the y-axis:

```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy))
```

We can also convey information about our data by mapping the aesthetics in our plots to the variables in our dataset. For example, we can map the colors of the data points to the `class` variable to reveal the class of each car.

```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = class))
```

Lastly, we can use facets to split a larger plot into subplots. This can be helpful when we want to break apart our data based on a categorical variable.

```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) + 
  facet_wrap(~ class, nrow = 2)
```
